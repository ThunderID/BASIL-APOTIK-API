<?php

namespace Thunderlabid\WMS;

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// LARAVEL
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Validation\Rule;

class StockCard extends Model
{
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $table = 'WMS_stock_cards';
	public $timestamps = true;
	protected $fillable = [
		'warehouse_id',
		'ref_id',
		'ref_type',
		'product_id',
		'qty',
		'date',
		'sku',
		'expired_at',
	];

	protected $hidden = [
	];

	protected $casts = [
	];

	protected $dates = [
		'deleted_at', 'date', 'expired_at'
	];

	protected $touches = [
	];

	protected $observables = [
	];

	protected $appends = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function warehouse(){
		return $this->belongsTo(get_class(app()->make(Warehouse::class)), 'warehouse_id');
	}

	public function product(){
		return $this->belongsTo(get_class(app()->make(Product::class)));
	}
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOTx
	// ---------------------------------------------------------------------------------x-----------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$rules['warehouse_id']		= ['required', 'integer', 'exists:'. app()->make(Warehouse::class)->getTable() . ',id'];
		$rules['ref_id']			= ['required', 'integer'];
		$rules['ref_type']			= ['required', 'string'];
		$rules['product_id']		= ['required', 'integer', 'exists:'. app()->make(Product::class)->getTable() . ',id'];
		$rules['qty']           	= ['required', 'numeric'];
		$rules['date']       		= ['required', 'date'];
		$rules['sku']           	= ['required', 'string'];
		$rules['expired_at']        = ['nullable', 'date'];
		
		return $rules;
	}

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function scopeDateLt ($q, \Carbon\Carbon $v) 
	{
		return $q->where('date', '<', $v);
	}

	public function scopeDateLte ($q, \Carbon\Carbon $v) 
	{
		return $q->where('date', '<=', $v);
	}

	public function scopeDateGt ($q, \Carbon\Carbon $v) 
	{
		return $q->where('date', '>', $v);
	}

	public function scopeDateGte ($q, \Carbon\Carbon $v) 
	{
		return $q->where('date', '>=', $v);
	}	
}