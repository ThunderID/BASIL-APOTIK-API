<?php

namespace Thunderlabid\Accounting;

// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// LARAVEL
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Validation\Rule;

class SubsidiaryCOA extends Model
{
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	use SoftDeletes, Traits\Model\HasCustomModelEvent;

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $table = 'ACCT_coa_subsidiaries';
	public $timestamps = true;
	protected $fillable = [
		'coa_id',
		'code',
		'name',
		'data',
		'description',
	];

	protected $hidden = [
	];

	protected $casts = [
		'data'	=> 'array'
	];

	protected $dates = [
		'deleted_at'
	];

	protected $touches = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	


	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function ref()
	{
		return $this->morphTo();
	}

	public function coa()
	{
		return $this->belongsTo(app()->make(COA::class));
	}

	public function journal_entries()
	{
		return $this->belongsTo(app()->make(JournalEntryLine::class));
	}
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$rules['coa_id'] = ['required', 'exists:' . with(app()->make(COA::class))->getTable() . ',id'];
		$rules['code']   = ['required', 'string', Rule::unique($this->getTable())->ignore($this->id)->where(function ($q) { return $q->where('coa_id', $this->coa_id); })];
		$rules['name']   = ['required', 'string', Rule::unique($this->getTable())->ignore($this->id)->where(function ($q) { return $q->where('coa_id', $this->coa_id); })];
		$rules['data']   = ['nullable', 'array'];
		$rules['description']   = ['nullable', 'string'];
		
		return $rules;
	}
	
	

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function scopeCoaId ($q, String $v) 
	{
		return $q->where('coa_id', '=', $v);
	}

	public function scopeCode ($q, String $v) 
	{
		return $q->where('code', 'like', str_replace('*', '%', $v));
	}

	public function scopeName ($q, String $v) 
	{
		return $q->where('name', 'like', str_replace('*', '%', $v));
	}

	public function scopeSearch ($q, String $v) 
	{
		return $q->where('name', 'like', str_replace('*', '%', $v))
				 ->orWhere('code', 'like', str_replace('*', '%', $v));
	}
}