<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Validation\Rule;

class Org extends Model
{
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $table = 'orgs';

	protected $fillable = [
		'org_group_id',
		'name',
		'address',
		'city',
		'province',
		'country',
		'phone',
		'geolocation',
	];

	public $timestamps = true;

	protected $hidden = [
	];

	protected $casts = [
		'geolocation'	=> 'array',
	];

	protected $dates = [
		'deleted_at'
	];

	protected $touches = [
	];

	protected $observables = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function org_group()
	{
		return $this->belongsTo(OrgGroup::class, 'org_group_id');
	}

	public function org_setting()
	{
		return $this->hasOne(OrgSetting::class)->Where('active_at', '<=', now())->orderby('active_at', 'desc');
	}

	public function pos_points()
	{
		return $this->hasMany(\Thunderlabid\POS\POSPoint::class);
	}

	public function warehouses()
	{
		return $this->hasMany(\Thunderlabid\WMS\Warehouse::class);
	}

	public function setting($date = 'now')
	{
		return $this->hasOne(OrgSetting::class)->Where('active_at', '<=', \Carbon\Carbon::parse($date))->orderby('created_at', 'desc');
	}
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$rules['org_group_id'] = ['required', 'exists:' . app()->make(OrgGroup::class)->getTable() . ',id'];
		$rules['name']         = ['required', 'string', Rule::unique($this->getTable(), 'name')->ignore($this->id)->where(function($q) { $q->where('org_group_id', '=', $this->org_group_id ? $this->org_group_id : -1); })];
		$rules['address']      = ['required', 'string'];
		$rules['city']         = ['required', 'string'];
		$rules['province']     = ['required', 'string'];
		$rules['country']      = ['required', 'string'];
		$rules['phone']        = ['required', 'string'];

		return $rules;
	}
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function scopeName($q, String $v)
	{
		return $q->where('name', 'like', str_replace('*', '%', $v));
	}

	public function scopeCity($q, String $v)
	{
		return $q->where('city', 'like', str_replace('*', '%', $v));
	}
}
