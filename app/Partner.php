<?php

namespace App;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Validation\Rule;

class Partner extends Model
{
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $fillable = [
		'org_id',
		'pr_id',
		'name',
		'address',
		'city',
		'province',
		'country',
		'phone',
		'scopes',
	];

	public $timestamps = true;

	protected $hidden = [
	];

	protected $casts = [
		'scopes'	=> 'array'
	];

	protected $dates = [
		'deleted_at'
	];

	protected $touches = [
	];

	protected $observables = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	CONST SCOPES = ['SUPPLIER'];
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function org()
	{
		return $this->belongsTo(Org::class, 'org_id');
	}

	public function pr()
	{
		return $this->belongsTo(User::class, 'pr_id');
	}

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$rules['org_id'] 	   = ['required', 'exists:' . app()->make(Org::class)->getTable() . ',id'];
		$rules['pr_id'] 	   = ['nullable', 'exists:' . app()->make(User::class)->getTable() . ',id'];
		$rules['name']         = ['required', 'string', Rule::unique($this->getTable(), 'name')->ignore($this->id)->where(function($q) { $q->where('org_id', '=', $this->org_id ? $this->org_id : -1); })];
		$rules['address']      = ['required', 'string'];
		$rules['city']         = ['required', 'string'];
		$rules['province']     = ['required', 'string'];
		$rules['country']      = ['required', 'string'];
		$rules['phone']        = ['required', 'string'];
		$rules['scopes']       = ['required', 'array'];
		$rules['scopes.*']     = ['required', 'in:'.implode(',', SELF::SCOPES)];

		return $rules;
	}
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function scopeName($q, String $v) {
		return $q->where('name', 'like', str_replace('*', '%', $v));
	}

	public function scopeCity($q, String $v) {
		return $q->where('city', 'like', str_replace('*', '%', $v));
	}


	public function scopeType($q, $v) {
		if(!is_array($v)){
			$v 	= [$v];
		}

		return $q->where(function($q2)use($v){
			foreach ($v as $v2) {
				$q2 = $q2->orwhere('scopes', 'like', '%'.$v2.'%');
			}
			return $q2;
		});
	}
}
