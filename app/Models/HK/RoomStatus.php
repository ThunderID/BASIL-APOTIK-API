<?php

namespace App\Models\HK;

use Illuminate\Database\Eloquent\Model;

use App\Room;
use App\User;

class RoomStatus extends Model
{
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $fillable = [
		'room_id',
		'user_id',
		'due_to_next_status',
		'status',
		'dont_disturb',
	];

	public $timestamps = true;

	protected $hidden = [
	];

	protected $casts = [
	];

	protected $dates = [
		'deleted_at',
		'due_to_next_status',
		'created_at'
	];

	protected $touches = [
	];

	protected $observables = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	const VACANT_DIRTY   	= 'VACANT_DIRTY';
	const VACANT_CLEAN   	= 'VACANT_CLEAN';
	const VACANT_READY   	= 'VACANT_READY';
	const VACANT_CLEANING	= 'VACANT_CLEANING';
	const OCCUPIED_DIRTY 	= 'OCCUPIED_DIRTY';
	const OCCUPIED_CLEAN 	= 'OCCUPIED_CLEAN';
	const OCCUPIED_READY 	= 'OCCUPIED_READY';
	const OCCUPIED_CLEANING	= 'OCCUPIED_CLEANING';
	const OUT_OF_SERVICE   	= 'OUT_OF_SERVICE';
	const OUT_OF_ORDER   	= 'OUT_OF_ORDER';
	const REPAIRED       	= 'REPAIRED';

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function room(){
		return $this->belongsTo(Room::class, 'room_id');
	}

	public function user(){
		return $this->belongsTo(User::class);
	}

	public function medias(){
		return $this->hasMany(HKMedia::class, 'room_status_id');
	}

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$statuses = [
			Static::VACANT_DIRTY,
			Static::VACANT_CLEAN,
			Static::VACANT_READY,
			Static::VACANT_CLEANING,
			Static::OCCUPIED_DIRTY,
			Static::OCCUPIED_CLEAN,
			Static::OCCUPIED_READY,
			Static::OCCUPIED_CLEANING,
			Static::OUT_OF_SERVICE,
			Static::OUT_OF_ORDER,
			Static::REPAIRED,
		];

		$rules['room_id']            = ['required', 'exists:'. app()->make(Room::class)->getTable() . ',id'];
		$rules['user_id']            = ['nullable', 'exists:'. app()->make(User::class)->getTable() . ',id'];
		$rules['due_to_next_status'] = ['required_if:status,' . Static::OUT_OF_SERVICE, 'nullable', 'date', 'after:created_at'];
		$rules['status']             = ['required', 'string', 'in:' . implode(',', $statuses) ];
		
		return $rules;
	}
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function scopeStatus ($q, String $v) 
	{
		return $q->where('status', 'like', str_replace('*', '%', $v));
	}
}
