<?php

namespace App\Models\Focashier;

use Illuminate\Database\Eloquent\Model;
use App\Models\Record\GA;

class Invoice extends Model
{
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $fillable = [
		'org_id',
		'user_id',
		'partner_id',
		'reception_id',
		'no',
		'issued_at',
		'paid_at',
		'cancelled_at',
		'lines',
		'taxes',
		'billing_name',
		'billing_phone',
		'billing_address',
		'billing_instruction',
		'point',
		'deposit',
	];

	public $timestamps = true;

	protected $hidden = [
	];

	protected $casts = [
		'lines'	=> 'array',
		'taxes'	=> 'array',
	];

	protected $dates = [
		'deleted_at',
		'issued_at',
		'paid_at',
		'cancelled_at'
	];

	protected $touches = [
	];

	protected $observables = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	const BILLING_INSTRUCTION = [
		'CASH', 'BANK_TRANSFER', 'DEBIT_CARD', 'CREDIT_CARD', 'CITY_LEDGER', 'ACCOUNT_RECEIVABLE'
	];

	const PAY_LATER = [
		'CITY_LEDGER', 'ACCOUNT_RECEIVABLE'
	];


	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function user() {
		return $this->belongsTo(\App\User::class);
	}

	public function org() {
		return $this->belongsTo(\App\Org::class);
	}

	public function partner() {
		return $this->belongsTo(\App\Partner::class);
	}

	public function reception() {
		return $this->belongsTo(\App\Models\Record\Reception::class);
	}

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$rules['org_id']		= ['required', 'exists:' . app()->make(\App\Org::class)->getTable() . ',id'];
		$rules['user_id']		= ['required', 'exists:' . app()->make(\App\User::class)->getTable() . ',id'];
		$rules['partner_id']	= ['nullable', 'exists:' . app()->make(\App\Partner::class)->getTable() . ',id'];
		$rules['reception_id']	= ['nullable', 'exists:' . app()->make(\App\Models\Record\Reception::class)->getTable() . ',id'];
		$rules['no']			= ['nullable', 'string'];
		$rules['issued_at']		= ['nullable', 'date'];
		$rules['billing_name']			= ['required_with:paid_at', 'string'];
		$rules['billing_phone']			= ['required_with:paid_at', 'string'];
		$rules['billing_address']		= ['nullable'];
		$rules['billing_instruction']	= ['required_with:paid_at', 'in:'.implode(',', SELF::BILLING_INSTRUCTION)];
		$rules['lines']			= ['required', 'array'];
		$rules['lines.*.description']	= ['required', 'string'];
		$rules['lines.*.amount']		= ['required', 'numeric'];
		$rules['lines.*.room_id']		= ['nullable', 'numeric', 'exists:' . app()->make(\App\Room::class)->getTable() . ',id'];
		$rules['point']			= ['nullable', 'numeric'];
		$rules['deposit']		= ['nullable', 'numeric'];

		$rules['paid_at']		= ['nullable', 'date', 'after_or_equal:issued_at'];
		$rules['cancelled_at']	= ['nullable', 'date', 'after_or_equal:issued_at'];
		
		$rules['taxes.*.description']	= ['required', 'string'];
		$rules['taxes.*.amount']		= ['required', 'numeric'];
		
		return $rules;
	}
	
	public function generateNo() {
		$prefix 	= str_pad($this->org_id, 4, '0', STR_PAD_LEFT).'.'.now()->format('ym');
		$idx 		= Invoice::where('no', 'like', $prefix.'%')->count() + 1;
		do{
			$no 	= $prefix.'.'.str_pad($idx, 4, '0', STR_PAD_LEFT);
			$exists	= Invoice::where('no', $no)->first();
			$idx++;
		}while ($exists);
		
		return $no;
	}

	
	public function cancel()
	{
		$this->attributes['cancelled_at'] = now();
		return $this->save();
	}
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getAmountAttribute()
	{
		return array_Sum(array_column($this->lines, 'amount'));
	}
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
}
