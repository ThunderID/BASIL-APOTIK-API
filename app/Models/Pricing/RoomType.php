<?php

namespace App\Models\Pricing;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Validation\Rule;

use App\Models\Record\ReceptionLine;

class RoomType extends Model
{
    // --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// TRAITS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// VARIABLES
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	protected $fillable = [
		'org_id',
		'name',
		'description',
		'facilities',
		'gallery',
		'is_partnership_program',
	];

	public $timestamps = true;

	protected $hidden = [
	];

	protected $casts = [
		'facilities' 	=> 'array',
		'gallery' 		=> 'array',
	];

	protected $dates = [
		'deleted_at'
	];

	protected $touches = [
	];

	protected $observables = [
	];

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONFIGURATIONS
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	


	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// CONSTRUCT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// RELATIONSHIP
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function org() {
		return $this->belongsTo(\App\Org::class);
	}

	public function rooms() {
		return $this->belongstomany(\App\Room::class, 'rooms_types');
	}

	public function rooms2() {
		return $this->belongstomany(\App\Room::class, 'rooms_types');
	}

	public function roomsVacant() {
		return \App\Room::wherehas('room_types', function($q){$q->where('id', $this->id);})->SearchByStatus([\App\Models\HK\RoomStatus::VACANT_DIRTY, \App\Models\HK\RoomStatus::VACANT_CLEANING, \App\Models\HK\RoomStatus::VACANT_CLEAN, \App\Models\HK\RoomStatus::VACANT_READY])->get(['id']);
		return $this->belongstomany(\App\Room::class, 'rooms_types')->SearchByStatus([\App\Models\HK\RoomStatus::VACANT_DIRTY, \App\Models\HK\RoomStatus::VACANT_CLEAN, \App\Models\HK\RoomStatus::VACANT_READY]);
	}

	public function roomsOccupied() {
		return \App\Room::wherehas('room_types', function($q){$q->where('id', $this->id);})->SearchByStatus([\App\Models\HK\RoomStatus::OCCUPIED_DIRTY, \App\Models\HK\RoomStatus::OCCUPIED_CLEANING, \App\Models\HK\RoomStatus::OCCUPIED_CLEAN, \App\Models\HK\RoomStatus::OCCUPIED_READY])->get(['id']);
		return $this->belongstomany(\App\Room::class, 'rooms_types')->SearchByStatus([\App\Models\HK\RoomStatus::OCCUPIED_DIRTY, \App\Models\HK\RoomStatus::OCCUPIED_CLEAN, \App\Models\HK\RoomStatus::OCCUPIED_READY]);
	}

	public function room_rate() {
		return $this->hasOne(RoomRate::class)->where('started_at', '<', now())->orderby('started_at', 'desc');
	}

	public function room_availabilities() {
		return $this->hasMany(RoomAvailability::class);
	}

	public function room_rates() {
		return $this->hasMany(RoomRate::class);
	}

	public function reception_lines(){
		return $this->hasMany(ReceptionLine::class);
	}

	public function reception_lines2(){
		return $this->hasMany(ReceptionLine::class);
	}
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// BOOT
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// STATIC FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// FUNCTION
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function getRules()
	{
		$rules['org_id']    	= ['required', 'integer', 'exists:'. app()->make(\App\Org::class)->getTable() . ',id'];
		$rules['name']        	= ['required', 'string', Rule::unique($this->getTable())->ignore($this->id)->where(function($q) { $q->where('org_id', '=', $this->org_id ? $this->org_id : -1); } ) ];
		$rules['description'] 	= ['nullable', 'string'];
		$rules['facilities']  	= ['nullable', 'array'];
		$rules['facilities.room_capacity']	= ['required', 'integer'];
		$rules['facilities.breakfast']		= ['required', 'integer'];
		$rules['facilities.double_bed']		= ['required', 'integer'];
		$rules['facilities.single_bed']		= ['required', 'integer'];
		$rules['gallery.default']			= ['nullable', 'url'];
		
		return $rules;
	}
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// ACCESSOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// MUTATOR
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	// QUERY
	// --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	public function scopeName ($q, String $v) 
	{
		return $q->where('name', 'like', str_replace('*', '%', $v));
	}
}
